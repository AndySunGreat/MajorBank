<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.majorbank.mapper.PackageMapper">


    <!-- private long packageId; // 套餐ID
    private String packageName; // 套餐名称
    private long jobId; // 岗位的ID
    private String bankIdsJson;// 存放该套餐配置的一组bankID
    private Date createDate; // 创建时间
    private Date changeDate; // 套餐修改时间
    -->
    <resultMap id="packageRstMap"
        type="com.majorbank.model.Package">
        <result column="PACKAGE_ID" property="packageId" />
        <result column="PACKAGE_NAME" property="packageName" />
        <result column="JOB_ID" property="jobId" />
        <result column="BANK_IDS_JSON" property="bankIdsJson" />
        <result column="CREATE_DATE" property="createDate" />
        <result column="CHANGE_DATE" property="changeDate" />
    </resultMap>

    <!-- get all users record -->
    <sql id="selectPackage">
        SELECT
        PACKAGE_ID,
        PACKAGE_NAME,
        JOB_ID,
        BANK_IDS_JSON,
        CREATE_DATE,
        CHANGE_DATE
        FROM PACKAGE
    </sql>
    <sql id="packageFilterWhereClause">
        <where>
            <if test="_parameter !=null ">
                1=1
                <if test="PACKAGE_ID != 0">
                    and PACKAGE_ID = #{packageId}
                </if>

                <if test="PACKAGE_NAME != null">
                    and PACKAGE_NAME = #{packageName}
                </if>
                <if test="JOB_ID != 0">
                    and JOB_ID = #{jobId}
                </if>
            </if>
        </where>
    </sql>
    <select id="getAllPackages" parameterType="com.majorbank.model.Package"
            resultMap="packageRstMap">
        <include refid="selectPackage" />
        <include refid="packageFilterWhereClause" />
    </select>

    <!-- find user by id -->
    <select id="getPackageById" resultMap="packageRstMap" parameterType="long">
        SELECT
        PACKAGE_ID,
        PACKAGE_NAME,
        JOB_ID,
        BANK_IDS_JSON,
        CREATE_DATE,
        CHANGE_DATE
        FROM PACKAGE
        WHERE PACKAGE_ID=#{packageId}
    </select>

    <select id="getAutoPackageByJobId" resultMap="packageRstMap" parameterType="long">
        SELECT
        PACKAGE_ID,
        PACKAGE_NAME,
        JOB_ID,
        BANK_IDS_JSON,
        CREATE_DATE,
        CHANGE_DATE
        FROM PACKAGE
        WHERE JOB_ID=#{jobId,jdbcType=NUMERIC}
    </select>

    <insert id="insertPackage" parameterType="com.majorbank.model.Package">
        <selectKey resultType="Long" order="BEFORE" keyProperty="packageId">
            SELECT _nextval('packageid') FROM DUAL
        </selectKey>
        INSERT INTO PACKAGE(
        PACKAGE_ID,
        PACKAGE_NAME,
        JOB_ID,
        BANK_IDS_JSON,
        CREATE_DATE,
        CHANGE_DATE
        )
        VALUES(
        #{packageId,jdbcType=NUMERIC},
        #{packageName,jdbcType=VARCHAR},
        #{jobId,jdbcType=NUMERIC},
        #{bankIdsJson,jdbcType=VARCHAR},
        NOW(),
        NOW()
        )
    </insert>

    <update id="updatePackage" parameterType="com.majorbank.model.Package">
        UPDATE
        PACKAGE
        SET
        CHANGE_DATE=NOW()
        <if test="packageName !=null">
        ,PACKAGE_NAME = #{packageName,jdbcType=VARCHAR}
        </if>
        <if test="jobId !=null">
        ,JOB_ID = #{jobId,jdbcType=NUMERIC}
        </if>
        <if test="bankIdsJson !=null">
        ,BANK_IDS_JSON = #{bankIdsJson,jdbcType=VARCHAR}
        </if>
        WHERE PACKAGE_ID= #{packageId,jdbcType=NUMERIC}
    </update>

    <delete id="deletePackage"  parameterType="long">
        DELETE
        FROM PACKAGE
        WHERE PACKAGE_ID=#{packageId,jdbcType=NUMERIC}
    </delete>



</mapper>