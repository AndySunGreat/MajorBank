<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.majorbank.mapper.UserMapper">

    <resultMap id="userRstMap"
        type="com.majorbank.model.User">
        <result column="ID" property="id" />
        <result column="USERNAME" property="username" />
        <result column="PASSWORD" property="password" />
        <result column="JOB_NAME" property="jobName" />
        <result column="CHANGE_DATE" property="changeDate" />
    </resultMap>

    <resultMap id="orderRstMap"
        type="com.majorbank.model.Order">
        <result column="ORDER_ID" property="orderId" />
        <result column="USER_ID" property="userId" />
        <result column="ORDER_TYPE" property="orderType" />
        <result column="ORDER_STATUS" property="orderStatus" />
        <result column="ORDER_DATE" property="orderDate" />
        <result column="BANK_ID" property="bankId" />
        <result column="ANSWER_ID" property="answerId"/>
    </resultMap>

    <parameterMap id="userBankMap"
        type="com.majorbank.model.Order">
        <parameter  property="orderId" jdbcType="NUMERIC" />
        <parameter  property="userId" jdbcType="NUMERIC" />
    </parameterMap>


    <!-- get all users record -->
    <sql id="selectUser">
        SELECT
        ID,
        USERNAME,
        PASSWORD,
        JOB_NAME,
        CHANGE_DATE
        FROM USER
    </sql>
    <sql id="userFilterWhereClause">
        <where>
            <if test="_parameter !=null ">
                1=1
                <if test="id != 0">
                    and ID = #{id}
                </if>

                <if test="username != null">
                    and USERNAME = #{username}
                </if>

                <if test="password != null">
                    and PASSWORD = #{password}
                </if>
            </if>
        </where>
    </sql>
    <select id="getAllUsers" parameterType="com.majorbank.model.User"
            resultType="com.majorbank.model.User">
        <include refid="selectUser" />
        <include refid="userFilterWhereClause" />
    </select>

    <!-- find user by id -->
    <select id="getUserById" resultMap="userRstMap" parameterType="long">
        SELECT
        ID,
        USERNAME,
        PASSWORD,
        JOB_NAME,
        CHANGE_DATE
        FROM USER
        WHERE id=#{userId}
    </select>

    <insert id="insertUser" parameterType="com.majorbank.model.User">
        <selectKey resultType="Long" order="BEFORE" keyProperty="id">
            SELECT _nextval('userid') FROM DUAL
        </selectKey>
        INSERT INTO USER(
        ID,
        USERNAME,
        PASSWORD,
        JOB_NAME,
        CHANGE_DATE
        )
        VALUES(
        #{id,jdbcType=NUMERIC},
        #{username,jdbcType=VARCHAR},
        #{password,jdbcType=VARCHAR},
        #{jobName,jdbcType=VARCHAR},
        NOW()
        )
    </insert>

    <update id="updateUser" parameterType="com.majorbank.model.User">
        UPDATE
        USER
        SET
        change_date=NOW()
        <if test="username !=null">
        ,username = #{username,jdbcType=VARCHAR}
        </if>
        <if test="password !=null">
        ,password = #{password,jdbcType=VARCHAR}
        </if>
        WHERE id= #{id,jdbcType=NUMERIC}
    </update>

    <delete id="deleteUser"  parameterType="long">
        DELETE
        FROM USER
        WHERE id = #{id,jdbcType=NUMERIC}
    </delete>

    <!-- /user/{userId}/questbank
       List<QuestBank> getAllBankByUserId(long userId);
       获得某个用户的所有题库
     -->
    <select id="getAllOrderByUserId"  parameterType="com.majorbank.model.Order">
      SELECT
      order_id,
      user_id,
      order_type,
      order_status,
      change_date,
      bank_id,
      answer_id
      FROM ORDER
      WHERE user_id = #{userId}
      AND order_type = #{orderType}
    </select>

    <!--
    获得某个用户的某个题库
   QuestBank getBankByIds(long userId,long bankId);
   -->
    <select id="getOrderByIds" parameterMap="userBankMap" >
      SELECT
      order_id,
      user_id,
      order_type,
      order_status,
      change_date,
      bank_id,
      answer_id
      FROM ORDER
      WHERE user_id = #{userId,jdbcType=NUMERIC}
      and order_id = #{orderId,jdbcType=NUMERIC}
    </select>
</mapper>